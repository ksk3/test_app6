<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>callApi2GET</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    // implement resource here

//     var queryParams = request.queryParams; 
//     var functionName = queryParams.functionname;
//     var requestBody = request.body;
//     var requestData = requestBody.data;

//     gs.info('functionname = ' + functionName);

//      if ( functionName == 'selectproductprice' ) {
//          var selectProductPriceObj = new selectProductPrice();       
//           response = selectProductPriceObj.select(request);
//      }
var queryParams = request.queryParams;
gs.info('queryParams.product = ' + queryParams.product);
	
	    var writer = response.getStreamWriter(),
        hdrs = {},
        table = 'x_301301_test_app6_sales',
        record_limit = 100,
        gr = new GlideRecord(table);
	gr.addQuery()


    hdrs['Content-Type'] = 'application/json';
    response.setStatus(200);
    response.setHeaders(hdrs);


    gr.setLimit(record_limit);
	gr.addQuery('product', queryParams.product);
    gr.query();

    //  start building response object
    writer.writeString("{\"result\":[");

    //  iterate over incident records and build JSON representations to be streamed out.
    while (gr.next()) {
        var incidentObj = {};
        incidentObj.unitprice = gr.unitprice + '';
        incidentObj.product = gr.product + '';
        writer.writeString(global.JSON.stringify(incidentObj));

        if (gr.hasNext()) {
            writer.writeString(",");
        }
    }

    //  close the response object
    writer.writeString("]}");

	
	
})(request, response);]]></operation_script>
        <operation_uri>/api/x_301301_test_app6/scriptrestservice1</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-02-15 05:05:24</sys_created_on>
        <sys_id>2eea284337a323006726ea4873990e90</sys_id>
        <sys_mod_count>30</sys_mod_count>
        <sys_name>callApi2GET</sys_name>
        <sys_package display_value="test_app6" source="x_301301_test_app6">58f7b96e372223006726ea4873990e76</sys_package>
        <sys_policy/>
        <sys_scope display_value="test_app6">58f7b96e372223006726ea4873990e76</sys_scope>
        <sys_update_name>sys_ws_operation_2eea284337a323006726ea4873990e90</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-02-20 08:07:02</sys_updated_on>
        <web_service_definition display_value="scriptRestService1">2df8e00337a323006726ea4873990ee0</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
